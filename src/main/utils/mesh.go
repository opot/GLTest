package utils

import ()

type Mesh []float32

var face = [12]float32{
	0, 0, 1, 0, 1, 1,
	0, 0, 0, 1, 1, 1}

func GenCube(size float32) Mesh {
	a := size / 2
	res := []float32{
		-a, -a, -a, 1, 0.0, 0.0, 0.0, -1.0, 0.0,
		a, -a, -a, 1, 1.0, 0.0, 0.0, -1.0, 0.0,
		-a, -a, a, 1, 0.0, 1.0, 0.0, -1.0, 0.0,
		a, -a, -a, 1, 1.0, 0.0, 0.0, -1.0, 0.0,
		a, -a, a, 1, 1.0, 1.0, 0.0, -1.0, 0.0,
		-a, -a, a, 1, 0.0, 1.0, 0.0, -1.0, 0.0,

		// Top
		-a, a, -a, 1, 0.0, 0.0, 0.0, 1.0, 0.0,
		-a, a, a, 1, 0.0, 1.0, 0.0, 1.0, 0.0,
		a, a, -a, 1, 1.0, 0.0, 0.0, 1.0, 0.0,
		a, a, -a, 1, 1.0, 0.0, 0.0, 1.0, 0.0,
		-a, a, a, 1, 0.0, 1.0, 0.0, 1.0, 0.0,
		a, a, a, 1, 1.0, 1.0, 0.0, 1.0, 0.0,

		// Front
		-a, -a, a, 1, 0.0, 0.0, 0.0, 0.0, 1.0,
		a, -a, a, 1, 1.0, 0.0, 0.0, 0.0, 1.0,
		-a, a, a, 1, 0.0, 1.0, 0.0, 0.0, 1.0,
		a, -a, a, 1, 1.0, 0.0, 0.0, 0.0, 1.0,
		a, a, a, 1, 1.0, 1.0, 0.0, 0.0, 1.0,
		-a, a, a, 1, 0.0, 1.0, 0.0, 0.0, 1.0,

		// Back
		-a, -a, -a, 1, 0.0, 0.0, 0.0, 0.0, -1.0,
		-a, a, -a, 1, 0.0, 1.0, 0.0, 0.0, -1.0,
		a, -a, -a, 1, 1.0, 0.0, 0.0, 0.0, -1.0,
		a, -a, -a, 1, 1.0, 0.0, 0.0, 0.0, -1.0,
		-a, a, -a, 1, 0.0, 1.0, 0.0, 0.0, -1.0,
		a, a, -a, 1, 1.0, 1.0, 0.0, 0.0, -1.0,

		// Left
		-a, -a, a, 1, 0.0, 1.0, -1.0, 0.0, 0.0,
		-a, a, -a, 1, 1.0, 0.0, -1.0, 0.0, 0.0,
		-a, -a, -a, 1, 0.0, 0.0, -1.0, 0.0, 0.0,
		-a, -a, a, 1, 0.0, 1.0, -1.0, 0.0, 0.0,
		-a, a, a, 1, 1.0, 1.0, -1.0, 0.0, 0.0,
		-a, a, -a, 1, 1.0, 0.0, -1.0, 0.0, 0.0,

		// Right
		a, -a, a, 1, 0.0, 1.0, 1.0, 0.0, 0.0,
		a, -a, -a, 1, 0.0, 0.0, 1.0, 0.0, 0.0,
		a, a, -a, 1, 1.0, 0.0, 1.0, 0.0, 0.0,
		a, -a, a, 1, 0.0, 1.0, 1.0, 0.0, 0.0,
		a, a, -a, 1, 1.0, 0.0, 1.0, 0.0, 0.0,
		a, a, a, 1, 1.0, 1.0, 1.0, 0.0, 0.0,
	}

	return Mesh(res)
}
